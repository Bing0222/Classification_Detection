# @Time    : 2023/2/7
# @Author  : Bing

import os
import pandas as pd
import torch
import torchvision
from torchvision import transforms
from PIL import Image
import matplotlib.pyplot as plt

PATH = "E:/data/450birds/"
img_path = "E:/data/450birds/images to test/4.jpg"
weights_path = "E:/data/450birds/weight/resnet50.pth"

train_dir = os.path.join(PATH, 'train')
val_dir = os.path.join(PATH, 'valid')
test_dir = os.path.join(PATH, 'test')

df = pd.read_csv(os.path.join(PATH, 'birds.csv'))

train = df[df['data set'] == 'train'].reset_index(drop=True)
test = df[df['data set'] == 'test'].reset_index(drop=True)

train['filepaths'] = PATH + train['filepaths']
test['filepaths'] = PATH + test['filepaths']

num_classes = len(train.labels.unique())
print(train.labels.unique())

class_names = ['ABBOTTS BABBLER', 'ABBOTTS BOOBY', 'ABYSSINIAN GROUND HORNBILL', 'AFRICAN CROWNED CRANE',
              'AFRICAN EMERALD CUCKOO', 'AFRICAN FIREFINCH', 'AFRICAN OYSTER CATCHER',
              'AFRICAN PIED HORNBILL', 'ALBATROSS', 'ALBERTS TOWHEE', 'ALEXANDRINE PARAKEET', 'ALPINE CHOUGH'
    , 'ALTAMIRA YELLOWTHROAT', 'AMERICAN AVOCET', 'AMERICAN BITTERN', 'AMERICAN COOT', 'AMERICAN FLAMINGO',
              'AMERICAN GOLDFINCH'
    , 'AMERICAN KESTREL', 'AMERICAN PIPIT', 'AMERICAN REDSTART', 'AMERICAN WIGEON', 'AMETHYST WOODSTAR', 'ANDEAN GOOSE',
              'ANDEAN LAPWING', 'ANDEAN SISKIN',
              'ANHINGA', 'ANIANIAU', 'ANNAS HUMMINGBIRD', 'ANTBIRD', 'ANTILLEAN EUPHONIA'
    , 'APAPANE', 'APOSTLEBIRD', 'ARARIPE MANAKIN', 'ASHY STORM PETREL'
    , 'ASHY THRUSHBIRD', 'ASIAN CRESTED IBIS', 'ASIAN DOLLARD BIRD'
    , 'AUCKLAND SHAQ', 'AUSTRAL CANASTERO', 'AUSTRALASIAN FIGBIRD', 'AVADAVAT'
    , 'AZARAS SPINETAIL', 'AZURE BREASTED PITTA', 'AZURE JAY', 'AZURE TANAGER'
    , 'AZURE TIT', 'BAIKAL TEAL', 'BALD EAGLE', 'BALD IBIS', 'BALI STARLING'
    , 'BALTIMORE ORIOLE', 'BANANAQUIT', 'BAND TAILED GUAN', 'BANDED BROADBILL'
    , 'BANDED PITA', 'BANDED STILT', 'BAR-TAILED GODWIT', 'BARN OWL'
    , 'BARN SWALLOW', 'BARRED PUFFBIRD', 'BARROWS GOLDENEYE'
    , 'BAY-BREASTED WARBLER', 'BEARDED BARBET', 'BEARDED BELLBIRD'
    , 'BEARDED REEDLING', 'BELTED KINGFISHER', 'BIRD OF PARADISE'
    , 'BLACK & YELLOW BROADBILL', 'BLACK BAZA', 'BLACK COCKATO', 'BLACK FRANCOLIN'
    , 'BLACK SKIMMER', 'BLACK SWAN', 'BLACK TAIL CRAKE', 'BLACK THROATED BUSHTIT'
    , 'BLACK THROATED WARBLER', 'BLACK VENTED SHEARWATER', 'BLACK VULTURE'
    , 'BLACK-CAPPED CHICKADEE', 'BLACK-NECKED GREBE', 'BLACK-THROATED SPARROW'
    , 'BLACKBURNIAM WARBLER', 'BLONDE CRESTED WOODPECKER', 'BLOOD PHEASANT'
    , 'BLUE COAU', 'BLUE DACNIS', 'BLUE GROUSE', 'BLUE HERON', 'BLUE MALKOHA'
    , 'BLUE THROATED TOUCANET', 'BOBOLINK', 'BORNEAN BRISTLEHEAD'
    , 'BORNEAN LEAFBIRD', 'BORNEAN PHEASANT', 'BRANDT CORMARANT'
    , 'BREWERS BLACKBIRD', 'BROWN CREPPER', 'BROWN NOODY', 'BROWN THRASHER'
    , 'BUFFLEHEAD', 'BULWERS PHEASANT', 'BURCHELLS COURSER', 'BUSH TURKEY'
    , 'CAATINGA CACHOLOTE', 'CACTUS WREN', 'CALIFORNIA CONDOR', 'CALIFORNIA GULL'
    , 'CALIFORNIA QUAIL', 'CAMPO FLICKER', 'CANARY', 'CAPE GLOSSY STARLING'
    , 'CAPE LONGCLAW', 'CAPE MAY WARBLER', 'CAPE ROCK THRUSH', 'CAPPED HERON'
    , 'CAPUCHINBIRD', 'CARMINE BEE-EATER', 'CASPIAN TERN', 'CASSOWARY'
    , 'CEDAR WAXWING', 'CERULEAN WARBLER', 'CHARA DE COLLAR', 'CHATTERING LORY'
    , 'CHESTNET BELLIED EUPHONIA', 'CHINESE BAMBOO PARTRIDGE'
    , 'CHINESE POND HERON', 'CHIPPING SPARROW', 'CHUCAO TAPACULO'
    , 'CHUKAR PARTRIDGE', 'CINNAMON ATTILA', 'CINNAMON FLYCATCHER'
    , 'CINNAMON TEAL', 'CLARKS NUTCRACKER', 'COCK OF THE  ROCK', 'COCKATOO'
    , 'COLLARED ARACARI', 'COMMON FIRECREST', 'COMMON GRACKLE'
    , 'COMMON HOUSE MARTIN', 'COMMON IORA', 'COMMON LOON', 'COMMON POORWILL'
    , 'COMMON STARLING', 'COPPERY TAILED COUCAL', 'CRAB PLOVER', 'CRANE HAWK'
    , 'CREAM COLORED WOODPECKER', 'CRESTED AUKLET', 'CRESTED CARACARA'
    , 'CRESTED COUA', 'CRESTED FIREBACK', 'CRESTED KINGFISHER', 'CRESTED NUTHATCH'
    , 'CRESTED OROPENDOLA', 'CRESTED SHRIKETIT', 'CRIMSON CHAT', 'CRIMSON SUNBIRD'
    , 'CROW', 'CROWNED PIGEON', 'CUBAN TODY', 'CUBAN TROGON'
    , 'CURL CRESTED ARACURI', 'D-ARNAUDS BARBET', 'DALMATIAN PELICAN'
    , 'DARJEELING WOODPECKER', 'DARK EYED JUNCO', 'DARWINS FLYCATCHER'
    , 'DAURIAN REDSTART', 'DEMOISELLE CRANE', 'DOUBLE BARRED FINCH'
    , 'DOUBLE BRESTED CORMARANT', 'DOUBLE EYED FIG PARROT', 'DOWNY WOODPECKER'
    , 'DUSKY LORY', 'DUSKY ROBIN', 'EARED PITA', 'EASTERN BLUEBIRD'
    , 'EASTERN BLUEBONNET', 'EASTERN GOLDEN WEAVER', 'EASTERN MEADOWLARK'
    , 'EASTERN ROSELLA', 'EASTERN TOWEE', 'EASTERN WIP POOR WILL'
    , 'ECUADORIAN HILLSTAR', 'EGYPTIAN GOOSE', 'ELEGANT TROGON'
    , 'ELLIOTS  PHEASANT', 'EMERALD TANAGER', 'EMPEROR PENGUIN', 'EMU'
    , 'ENGGANO MYNA', 'EURASIAN BULLFINCH', 'EURASIAN GOLDEN ORIOLE'
    , 'EURASIAN MAGPIE', 'EUROPEAN GOLDFINCH', 'EUROPEAN TURTLE DOVE'
    , 'EVENING GROSBEAK', 'FAIRY BLUEBIRD', 'FAIRY PENGUIN', 'FAIRY TERN'
    , 'FAN TAILED WIDOW', 'FASCIATED WREN', 'FIERY MINIVET', 'FIORDLAND PENGUIN'
    , 'FIRE TAILLED MYZORNIS', 'FLAME BOWERBIRD', 'FLAME TANAGER', 'FRIGATE'
    , 'GAMBELS QUAIL', 'GANG GANG COCKATOO', 'GILA WOODPECKER', 'GILDED FLICKER'
    , 'GLOSSY IBIS', 'GO AWAY BIRD', 'GOLD WING WARBLER', 'GOLDEN BOWER BIRD'
    , 'GOLDEN CHEEKED WARBLER', 'GOLDEN CHLOROPHONIA', 'GOLDEN EAGLE'
    , 'GOLDEN PARAKEET', 'GOLDEN PHEASANT', 'GOLDEN PIPIT', 'GOULDIAN FINCH'
    , 'GRANDALA', 'GRAY CATBIRD', 'GRAY KINGBIRD', 'GRAY PARTRIDGE'
    , 'GREAT GRAY OWL', 'GREAT JACAMAR', 'GREAT KISKADEE', 'GREAT POTOO'
    , 'GREAT TINAMOU', 'GREAT XENOPS', 'GREATER PEWEE', 'GREATOR SAGE GROUSE'
    , 'GREEN BROADBILL', 'GREEN JAY', 'GREEN MAGPIE', 'GREY CUCKOOSHRIKE'
    , 'GREY PLOVER', 'GROVED BILLED ANI', 'GUINEA TURACO', 'GUINEAFOWL'
    , 'GURNEYS PITTA', 'GYRFALCON', 'HAMERKOP', 'HARLEQUIN DUCK', 'HARLEQUIN QUAIL'
    , 'HARPY EAGLE', 'HAWAIIAN GOOSE', 'HAWFINCH', 'HELMET VANGA'
    , 'HEPATIC TANAGER', 'HIMALAYAN BLUETAIL', 'HIMALAYAN MONAL', 'HOATZIN'
    , 'HOODED MERGANSER', 'HOOPOES', 'HORNED GUAN', 'HORNED LARK', 'HORNED SUNGEM'
    , 'HOUSE FINCH', 'HOUSE SPARROW', 'HYACINTH MACAW', 'IBERIAN MAGPIE'
    , 'IBISBILL', 'IMPERIAL SHAQ', 'INCA TERN', 'INDIAN BUSTARD', 'INDIAN PITTA'
    , 'INDIAN ROLLER', 'INDIAN VULTURE', 'INDIGO BUNTING', 'INDIGO FLYCATCHER'
    , 'INLAND DOTTEREL', 'IVORY BILLED ARACARI', 'IVORY GULL', 'IWI', 'JABIRU'
    , 'JACK SNIPE', 'JANDAYA PARAKEET', 'JAPANESE ROBIN', 'JAVA SPARROW'
    , 'JOCOTOCO ANTPITTA', 'KAGU', 'KAKAPO', 'KILLDEAR', 'KING EIDER'
    , 'KING VULTURE', 'KIWI', 'KOOKABURRA', 'LARK BUNTING', 'LAZULI BUNTING'
    , 'LESSER ADJUTANT', 'LILAC ROLLER', 'LITTLE AUK', 'LOGGERHEAD SHRIKE'
    , 'LONG-EARED OWL', 'MAGPIE GOOSE', 'MALABAR HORNBILL', 'MALACHITE KINGFISHER'
    , 'MALAGASY WHITE EYE', 'MALEO', 'MALLARD DUCK', 'MANDRIN DUCK'
    , 'MANGROVE CUCKOO', 'MARABOU STORK', 'MASKED BOOBY', 'MASKED LAPWING'
    , 'MCKAYS BUNTING', 'MIKADO  PHEASANT' 'MOURNING DOVE', 'MYNA'
    , 'NICOBAR PIGEON', 'NOISY FRIARBIRD', 'NORTHERN BEARDLESS TYRANNULET'
    , 'NORTHERN CARDINAL', 'NORTHERN FLICKER', 'NORTHERN FULMAR'
    , 'NORTHERN GANNET', 'NORTHERN GOSHAWK', 'NORTHERN JACANA'
    , 'NORTHERN MOCKINGBIRD', 'NORTHERN PARULA', 'NORTHERN RED BISHOP'
    , 'NORTHERN SHOVELER', 'OCELLATED TURKEY', 'OKINAWA RAIL'
    , 'ORANGE BRESTED BUNTING', 'ORIENTAL BAY OWL', 'OSPREY', 'OSTRICH', 'OVENBIRD'
    , 'OYSTER CATCHER', 'PAINTED BUNTING', 'PALILA', 'PARADISE TANAGER'
    , 'PARAKETT  AKULET', 'PARUS MAJOR', 'PATAGONIAN SIERRA FINCH', 'PEACOCK'
    , 'PEREGRINE FALCON', 'PHILIPPINE EAGLE', 'PINK ROBIN', 'POMARINE JAEGER'
    , 'PUFFIN', 'PURPLE FINCH', 'PURPLE GALLINULE', 'PURPLE MARTIN'
    , 'PURPLE SWAMPHEN', 'PYGMY KINGFISHER', 'QUETZAL', 'RAINBOW LORIKEET'
    , 'RAZORBILL', 'RED BEARDED BEE EATER', 'RED BELLIED PITTA'
    , 'RED BROWED FINCH', 'RED FACED CORMORANT', 'RED FACED WARBLER', 'RED FODY'
    , 'RED HEADED DUCK', 'RED HEADED WOODPECKER', 'RED HONEY CREEPER'
    , 'RED NAPED TROGON', 'RED TAILED HAWK', 'RED TAILED THRUSH'
    , 'RED WINGED BLACKBIRD', 'RED WISKERED BULBUL', 'REGENT BOWERBIRD'
    , 'RING-NECKED PHEASANT', 'ROADRUNNER', 'ROBIN', 'ROCK DOVE'
    , 'ROSY FACED LOVEBIRD', 'ROUGH LEG BUZZARD', 'ROYAL FLYCATCHER'
    , 'RUBY THROATED HUMMINGBIRD' 'RUDY KINGFISHER', 'RUFOUS KINGFISHER'
    , 'RUFUOS MOTMOT', 'SAMATRAN THRUSH', 'SAND MARTIN', 'SANDHILL CRANE'
    , 'SATYR TRAGOPAN', 'SCARLET CROWNED FRUIT DOVE', 'SCARLET IBIS'
    , 'SCARLET MACAW', 'SCARLET TANAGER', 'SHOEBILL', 'SHORT BILLED DOWITCHER'
    , 'SKUA', 'SMITHS LONGSPUR', 'SNOWY EGRET', 'SNOWY OWL', 'SNOWY PLOVER', 'SORA'
    , 'SPANGLED COTINGA', 'SPLENDID WREN', 'SPOON BILED SANDPIPER', 'SPOONBILL'
    , 'SPOTTED CATBIRD', 'SRI LANKA BLUE MAGPIE', 'STEAMER DUCK'
    , 'STORK BILLED KINGFISHER', 'STRAWBERRY FINCH', 'STRIPED OWL'
    , 'STRIPPED MANAKIN', 'STRIPPED SWALLOW', 'SUPERB STARLING'
    , 'SWINHOES PHEASANT', 'TAILORBIRD', 'TAIWAN MAGPIE', 'TAKAHE', 'TASMANIAN HEN'
    , 'TEAL DUCK', 'TIT MOUSE', 'TOUCHAN', 'TOWNSENDS WARBLER', 'TREE SWALLOW'
    , 'TRICOLORED BLACKBIRD', 'TROPICAL KINGBIRD', 'TRUMPTER SWAN'
    , 'TURKEY VULTURE', 'TURQUOISE MOTMOT', 'UMBRELLA BIRD', 'VARIED THRUSH'
    , 'VEERY', 'VENEZUELIAN TROUPIAL', 'VERMILION FLYCATHER'
    , 'VICTORIA CROWNED PIGEON', 'VIOLET GREEN SWALLOW', 'VIOLET TURACO'
    , 'VULTURINE GUINEAFOWL', 'WALL CREAPER', 'WATTLED CURASSOW'
    , 'WATTLED LAPWING', 'WHIMBREL', 'WHITE BROWED CRAKE', 'WHITE CHEEKED TURACO'
    , 'WHITE CRESTED HORNBILL', 'WHITE NECKED RAVEN', 'WHITE TAILED TROPIC'
    , 'WHITE THROATED BEE EATER', 'WILD TURKEY', 'WILSONS BIRD OF PARADISE'
    , 'WOOD DUCK', 'YELLOW BELLIED FLOWERPECKER', 'YELLOW CACIQUE'
    , 'YELLOW HEADED BLACKBIRD']

devices = 'cuda' if torch.cuda.is_available() else 'cpu'

data_transform = transforms.Compose([
    # 将输入图像的尺寸变成224*224
    transforms.Resize((224, 224)),
    # 数据变成tensor类型，像素值归一化，调整维度[h,w,c]==>[c,h,w]
    transforms.ToTensor(),
    # 对每个通道的像素进行标准化，给出每个通道的均值和方差
    transforms.Normalize(mean=(0.5, 0.5, 0.5), std=(0.5, 0.5, 0.5))])

frame = Image.open(img_path)
plt.imshow(frame)
plt.title('No.4')
plt.show()

img = data_transform(frame)
# 给图像增加batch维度 [c,h,w]==>[b,c,h,w]
img = torch.unsqueeze(img, dim=0)


net = torchvision.models.resnet50(num_classes=num_classes)

net.load_state_dict(torch.load(weights_path, map_location=devices))
# 模型切换成验证模式，dropout和bn切换形式
net.eval()

# 前向传播过程中不计算梯度
with torch.no_grad():
    # 前向传播
    outputs = net(img)
    # 只有一张图就挤压掉batch维度
    outputs = torch.squeeze(outputs)
    # 计算图片属于4个类别的概率
    predict = torch.softmax(outputs, dim=0)
    # 得到类别索引
    predict_cla = torch.argmax(predict).numpy()

# 获取最大预测类别概率
predict_score = round(torch.max(predict).item(), 4)
# 获取预测类别的名称
predict_name = class_names[predict_cla]

# 展示预测结果
plt.imshow(frame)
plt.title('class: ' + str(predict_name) + '\n score: ' + str(predict_score))
plt.show()